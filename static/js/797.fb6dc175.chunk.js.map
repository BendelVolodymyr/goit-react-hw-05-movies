{"version":3,"file":"static/js/797.fb6dc175.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/MoveisList/MoviesList.jsx","pages/MoviesPage.jsx","services/getMovies.js"],"sourcesContent":["import { DNA } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <DNA\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n\nexport default Loader;\n","import { Link } from 'react-router-dom';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <div className=\"box-home\">\n      <ul className=\"box-home__list\">\n        {movies.map(\n          ({ original_title, id }) =>\n            original_title !== undefined && (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  {original_title}\n                </Link>\n              </li>\n            )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoveisList/MoviesList';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { getMovieSearch } from 'services/getMovies';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchName, setSearchName] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    const query = searchParams.get('search');\n    if (!query) return;\n    getSearchName(query);\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (location.search === '') return;\n    getSearchName(location.search.slice(8));\n  }, [location.search]);\n  const getSearchName = async Name => {\n    setIsLoading(true);\n    try {\n      const data = await getMovieSearch(Name);\n      const { results } = data;\n      setMovies(results);\n    } catch (error) {\n      console.log('Error:', error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleInputChange = e => {\n    setSearchName(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!searchName.trim()) return alert('Can not be empty');\n    setSearchParams({ search: searchName });\n    setSearchName('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          name=\"search\"\n          value={searchName}\n          onChange={handleInputChange}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      {isLoading && <Loader />}\n      <MoviesList movies={movies} location={location} />\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY_API = '394f8b3fe0f5b61255381d3d4a3e1141';\n\nconst getMoviesTrend = async () => {\n    const { data } = await axios.get(`/trending/all/day?api_key=${KEY_API}`);\n    return data;\n};\n\nconst getMovieId = async (id) => {\n    const {data} = await axios.get(`/movie/${id}?api_key=${KEY_API}&language=en-US`);\n    return data;\n}\n\nconst getMovieCast = async (id) => {\n    const {data} = await axios.get(`/movie/${id}/credits?api_key=${KEY_API}`);\n    return data;\n}\n\nconst getMovieReviews = async (id) => {\n    const {data} = await axios.get(`/movie/${id}/reviews?api_key=${KEY_API}`);\n    return data;\n}\n\nconst getMovieSearch = async (searchName) => {\n    const {data} = await axios.get(`/search/movie?query=${searchName}&api_key=${KEY_API}`);\n    return data;\n}\n\nexport { getMoviesTrend, getMovieId, getMovieCast, getMovieReviews, getMovieSearch };\n\n\n\n\n"],"names":["_jsx","DNA","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","_ref","movies","location","className","children","map","_ref2","original_title","id","undefined","Link","to","concat","state","from","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","_useState","useState","_useState2","searchName","setSearchName","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setMovies","useLocation","useEffect","query","get","getSearchName","search","slice","_asyncToGenerator","_regeneratorRuntime","_callee","Name","data","results","_context","prev","next","getMovieSearch","sent","t0","console","log","message","finish","stop","_x","apply","arguments","_jsxs","_Fragment","onSubmit","e","preventDefault","trim","alert","type","placeholder","name","value","onChange","currentTarget","Loader","MoviesList","axios","KEY_API","getMoviesTrend","_yield$axios$get","abrupt","getMovieId","_callee2","_yield$axios$get2","_context2","getMovieCast","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}