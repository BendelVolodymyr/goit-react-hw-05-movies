{"version":3,"file":"static/js/694.8f2ac64f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.tsx","webpack://goit-react-hw-05-movies/./src/pages/Movie.module.scss?18a6","pages/Movie.tsx","services/getMovies.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dnaWrapper\":\"Loader_dnaWrapper__zOusD\"};","import { DNA } from 'react-loader-spinner';\nimport styles from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <DNA\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass={styles.dnaWrapper}\n    />\n  );\n};\n\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieSection\":\"Movie_movieSection__oMSmb\",\"boxImg\":\"Movie_boxImg__fmA91\",\"backLink\":\"Movie_backLink__UHZ6P\",\"boxDescription\":\"Movie_boxDescription__rJzYz\",\"boxInfo\":\"Movie_boxInfo__9Jx3r\",\"movieList\":\"Movie_movieList__+OAG6\"};","import Loader from 'components/Loader/Loader';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieId } from 'services/getMovies';\nimport { IMovie } from 'type/Movie';\nimport styles from './Movie.module.scss';\n\nconst defaultPhoto =\n  'https://www.reelviews.net/resources/img/default_poster.jpg';\n\nconst Movie = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState<Partial<IMovie>>({});\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovie = async (id: string | number) => {\n      try {\n        const data = await getMovieId(id);\n        setMovie(data);\n      } catch (error) {\n        console.log('Error:', error instanceof TypeError);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) getMovie(movieId);\n  }, [movieId]);\n\n  const {\n    original_title,\n    poster_path,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n\n  const resultPercentages = vote_average ? Math.round(vote_average * 10) : null;\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {original_title && (\n        <section className={styles.movieSection}>\n          <div className={styles.boxImg}>\n            <Link to={backLinkHref} className={styles.backLink}>\n              ü†ê Go back\n            </Link>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n                  : defaultPhoto\n              }\n              alt={original_title}\n              width={350}\n              loading=\"lazy\"\n            />\n          </div>\n\n          <div className={styles.boxDescription}>\n            <div>\n              <h2>{original_title}</h2>\n              <h2>{release_date}</h2>\n            </div>\n            {resultPercentages !== null && (\n              <span>User score: {resultPercentages}%</span>\n            )}\n            <h3>Overview</h3>\n            <span>{overview || 'No overview available'}</span>\n            <h3>Genres</h3>\n            {genres && genres.length > 0 ? (\n              <span>{genres.map(({ name }) => name).join(', ')}</span>\n            ) : (\n              <p>No information available</p>\n            )}\n          </div>\n\n          <div className={styles.boxInfo}>\n            <ul className={styles.movieList}>\n              <li>\n                <Link\n                  to={`/movies/${movieId}/cast`}\n                  state={{ from: backLinkHref }}\n                >\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to={`/movies/${movieId}/reviews`}\n                  state={{ from: backLinkHref }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          <Suspense fallback={<Loader />}>\n            <Outlet />\n          </Suspense>\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default Movie;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY_API = '394f8b3fe0f5b61255381d3d4a3e1141';\n\nconst getMoviesTrend = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY_API}`);\n  return data;\n};\n\nconst getMovieId = async (id: number | string) => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${KEY_API}&language=en-US`\n  );\n  return data;\n};\n\nconst getMovieCast = async (id: number | string) => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${KEY_API}`);\n  return data;\n};\n\nconst getMovieReviews = async (id: number | string) => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${KEY_API}`);\n  return data;\n};\n\nconst getMovieSearch = async (searchName: string) => {\n  const { data } = await axios.get(\n    `/search/movie?query=${searchName}&api_key=${KEY_API}`\n  );\n  return data;\n};\n\nexport {\n  getMoviesTrend,\n  getMovieId,\n  getMovieCast,\n  getMovieReviews,\n  getMovieSearch,\n};\n"],"names":["_jsx","DNA","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","styles","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","backLinkHref","useLocation","state","from","useEffect","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","data","_context","prev","next","getMovieId","sent","t0","console","log","TypeError","finish","stop","_x","apply","arguments","original_title","poster_path","release_date","vote_average","overview","genres","resultPercentages","Math","round","_jsxs","_Fragment","children","Loader","className","Link","to","src","concat","alt","loading","length","map","_ref2","name","join","Suspense","fallback","Outlet","axios","KEY_API","getMoviesTrend","_yield$axios$get","abrupt","_callee2","_yield$axios$get2","_context2","getMovieCast","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovieSearch","_ref5","_callee5","searchName","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}