{"version":3,"file":"static/js/499.867a3133.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","pages/Movie.jsx","services/getMovies.js"],"sourcesContent":["import { DNA } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <DNA\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"dna-wrapper\"\n    />\n  );\n};\n\nexport default Loader;\n","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieId } from 'services/getMovies';\n\nconst defaultPhoto =\n  'https://www.reelviews.net/resources/img/default_poster.jpg';\n\nconst Movie = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getMovie = async id => {\n      try {\n        const data = await getMovieId(id);\n        setMovie(data);\n      } catch (error) {\n        console.log('Error:', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getMovie(movieId);\n  }, [movieId]);\n\n  const {\n    original_title,\n    poster_path,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movie;\n\n  const resultPercentages = Math.round(vote_average * 10);\n  \n  return (\n    <>\n      {isLoading && <Loader />}\n      {movie.original_title !== undefined && (\n        <section>\n          <div>\n            <Link to={backLinkHref}>Go back</Link>\n            {poster_path !== undefined && (\n              <img\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n                    : defaultPhoto\n                }\n                alt={original_title}\n              />\n            )}\n          </div>\n          <div>\n            <div>\n              <h2>{original_title}</h2> <h2>{release_date}</h2>\n            </div>\n            <span>Use score: {resultPercentages}%</span>\n            <h3>Overview</h3>\n            <span>{overview}</span>\n            <h3>Genres</h3>\n            {genres.length !== 0 ? (\n              <span>\n                {' '}\n                {genres\n                  .map(element => {\n                    return element.name;\n                  })\n                  .join(' ')}\n              </span>\n            ) : (\n              <p>No information available</p>\n            )}\n          </div>\n          <div>\n            <ul>\n              <li>\n                <Link\n                  to={`/movies/${movieId}/cast`}\n                  state={{ from: backLinkHref }}\n                >\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link\n                  to={`/movies/${movieId}/reviews`}\n                  state={{ from: backLinkHref }}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </section>\n      )}\n    </>\n  );\n};\n\nexport default Movie;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY_API = '394f8b3fe0f5b61255381d3d4a3e1141';\n\nconst getMoviesTrend = async () => {\n    const { data } = await axios.get(`/trending/all/day?api_key=${KEY_API}`);\n    return data;\n};\n\nconst getMovieId = async (id) => {\n    const {data} = await axios.get(`/movie/${id}?api_key=${KEY_API}&language=en-US`);\n    return data;\n}\n\nconst getMovieCast = async (id) => {\n    const {data} = await axios.get(`/movie/${id}/credits?api_key=${KEY_API}`);\n    return data;\n}\n\nconst getMovieReviews = async (id) => {\n    const {data} = await axios.get(`/movie/${id}/reviews?api_key=${KEY_API}`);\n    return data;\n}\n\nconst getMovieSearch = async (searchName) => {\n    const {data} = await axios.get(`/search/movie?query=${searchName}&api_key=${KEY_API}`);\n    return data;\n}\n\nexport { getMoviesTrend, getMovieId, getMovieCast, getMovieReviews, getMovieSearch };\n\n\n\n\n"],"names":["_jsx","DNA","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","_location$state$from","_location$state","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","backLinkHref","useLocation","state","from","useEffect","getMovie","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","data","_context","prev","next","getMovieId","sent","t0","console","log","message","finish","stop","_x","apply","arguments","original_title","poster_path","release_date","vote_average","overview","genres","resultPercentages","Math","round","_jsxs","_Fragment","children","Loader","undefined","Link","to","src","concat","alt","length","map","element","name","join","Outlet","axios","KEY_API","getMoviesTrend","_yield$axios$get","abrupt","_ref2","_callee2","_yield$axios$get2","_context2","getMovieCast","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovieSearch","_ref5","_callee5","searchName","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}