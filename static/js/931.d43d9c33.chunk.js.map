{"version":3,"file":"static/js/931.d43d9c33.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.scss?0e19","components/Cast/Cast.tsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.scss?a435","components/Loader/Loader.tsx","services/getMovies.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Cast_container__NCbA-\",\"list\":\"Cast_list__gNQg+\",\"listItem\":\"Cast_listItem__jy9+X\",\"name\":\"Cast_name__SF9Yl\",\"popularity\":\"Cast_popularity__R4mCw\"};","import Loader from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/getMovies';\n\nimport styles from './Cast.module.scss';\n\nconst defaultPhoto =\n  'https://static.vecteezy.com/system/resources/previews/033/042/430/original/anonymous-man-icon-secret-person-unknown-incognito-vector.jpg';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState<any[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const getCast = async (id: number | string) => {\n      try {\n        const data = await getMovieCast(id);\n        const { cast } = data;\n        setMovieCast(cast);\n      } catch (error) {\n        console.log('Error:', error instanceof TypeError);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (movieId) {\n      getCast(movieId);\n    }\n  }, [movieId]);\n\n  return (\n    <div className={styles.container}>\n      {isLoading && <Loader />}\n      {movieCast.length !== 0 ? (\n        <ul className={styles.list}>\n          {movieCast.map(({ profile_path, id, original_name, popularity }) => (\n            <li key={id} className={styles.listItem}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w185/${profile_path}`\n                    : defaultPhoto\n                }\n                alt={original_name}\n                width={185}\n                height=\"auto\"\n              />\n              <h4 className={styles.name}>Name: {original_name}</h4>\n              <span className={styles.popularity}>\n                Popularity: {Math.round(popularity)} %\n              </span>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        !isLoading && <p>No information available</p>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"dnaWrapper\":\"Loader_dnaWrapper__zOusD\"};","import { DNA } from 'react-loader-spinner';\nimport styles from './Loader.module.scss';\n\nconst Loader = () => {\n  return (\n    <DNA\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"dna-loading\"\n      wrapperStyle={{}}\n      wrapperClass={styles.dnaWrapper}\n    />\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst KEY_API = '394f8b3fe0f5b61255381d3d4a3e1141';\n\nconst getMoviesTrend = async () => {\n  const { data } = await axios.get(`/trending/all/day?api_key=${KEY_API}`);\n  return data;\n};\n\nconst getMovieId = async (id: number | string) => {\n  const { data } = await axios.get(\n    `/movie/${id}?api_key=${KEY_API}&language=en-US`\n  );\n  return data;\n};\n\nconst getMovieCast = async (id: number | string) => {\n  const { data } = await axios.get(`/movie/${id}/credits?api_key=${KEY_API}`);\n  return data;\n};\n\nconst getMovieReviews = async (id: number | string) => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${KEY_API}`);\n  return data;\n};\n\nconst getMovieSearch = async (searchName: string) => {\n  const { data } = await axios.get(\n    `/search/movie?query=${searchName}&api_key=${KEY_API}`\n  );\n  return data;\n};\n\nexport {\n  getMoviesTrend,\n  getMovieId,\n  getMovieCast,\n  getMovieReviews,\n  getMovieSearch,\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","getCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","data","cast","_context","prev","next","getMovieCast","sent","t0","console","log","TypeError","finish","stop","_x","apply","arguments","_jsxs","className","styles","children","_jsx","Loader","length","map","_ref2","profile_path","original_name","popularity","src","concat","alt","width","height","Math","round","DNA","visible","ariaLabel","wrapperStyle","wrapperClass","axios","KEY_API","getMoviesTrend","_yield$axios$get","abrupt","getMovieId","_callee2","_yield$axios$get2","_context2","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovieSearch","_ref5","_callee5","searchName","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}